package eazySchool.eazySchool.controller;

import eazySchool.eazySchool.model.Holiday;
import lombok.extern.slf4j.Slf4j;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;
import java.util.stream.Collectors;

@Slf4j
@Controller
public class HolidayController {
    private static final Logger log = LoggerFactory.getLogger(HolidayController.class);

    @GetMapping("/holidays")
    public String displayHolidayPage(@RequestParam("festival") boolean festival,
                                     @RequestParam("federal") boolean federal,
                                     Model model){
        model.addAttribute("festival",festival);
        model.addAttribute("federal",federal);
        List<Holiday> holidays = List.of(
            new Holiday("01/01/2021","New Year Day",Holiday.Type.FEDERAL),
            new Holiday("02/14/2021","Valentine's Day",Holiday.Type.FESTIVAL),
            new Holiday("05/25/2021","Memorial Day",Holiday.Type.FEDERAL),
            new Holiday("07/04/2021","Independence Day",Holiday.Type.FESTIVAL),
            new Holiday("09/07/2021","Labor Day",Holiday.Type.FEDERAL),
            new Holiday("11/11/2021","Veterans Day",Holiday.Type.FESTIVAL),
            new Holiday("11/24/2021","Thanksgiving",Holiday.Type.FEDERAL),
            new Holiday("12/25/2021","Christmas",Holiday.Type.FESTIVAL)
        );
        Holiday.Type[] types = Holiday.Type.values();
        for (Holiday.Type type : types) {
            model.addAttribute(type.toString(),
                    (holidays.stream()
                    .filter(holiday -> holiday.getType().equals(type))
                    .collect(Collectors.toList())));
        }
        log.info("Name: {}",model);
        return "holidays.html";
    }
    @GetMapping("/holidays/{display}")
    public String displayHolidays(@PathVariable String display,Model model){
        List<Holiday> holidays = List.of(
                new Holiday("01/01/2021","New Year Day",Holiday.Type.FEDERAL),
                new Holiday("02/14/2021","Valentine's Day",Holiday.Type.FESTIVAL),
                new Holiday("05/25/2021","Memorial Day",Holiday.Type.FEDERAL),
                new Holiday("07/04/2021","Independence Day",Holiday.Type.FESTIVAL),
                new Holiday("09/07/2021","Labor Day",Holiday.Type.FEDERAL),
                new Holiday("11/11/2021","Veterans Day",Holiday.Type.FESTIVAL),
                new Holiday("11/24/2021","Thanksgiving",Holiday.Type.FEDERAL),
                new Holiday("12/25/2021","Christmas",Holiday.Type.FESTIVAL)
        );
        Holiday.Type[] types = Holiday.Type.values();
        for (Holiday.Type type : types) {
            model.addAttribute(type.toString(),
                    holidays.stream()
                    .filter(holiday -> holiday.getType().equals(type))
                    .collect(Collectors.toList()));
        }
        if(display.equals("federal")){
            model.addAttribute("federal",true);
            model.addAttribute("festival",false);
        }else if(display.equals("festival")){
            model.addAttribute("festival",true);
            model.addAttribute("federal",false);
        }
        else{
            model.addAttribute("festival",true);
            model.addAttribute("federal",true);
        }
        return "holidays.html";
    }
}
